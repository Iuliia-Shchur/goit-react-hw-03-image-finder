{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/App/App.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Api/images-api.js","Components/Modal/Modal.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Loader/Loader.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Searchbar/Searchbar.js","Components/App/App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onToggleModal","handleBackdropClick","event","currentTarget","target","console","log","window","addEventListener","this","removeEventListener","createPortal","className","s","Overlay","onClick","src","modalImg","alt","tags","Component","ImageGalleryItem","id","previewImg","showModal","ImageGalleryItemImage","Loader","ImageGallery","state","currentImg","apiUrl","apiKey","toggleModal","setState","onImgClick","img","imageListContent","images","map","webformatURL","largeImageURL","Button","onLoadMore","type","Searchbar","query","page","handleQueryChange","inputValue","value","name","axios","get","then","res","data","hits","catch","err","handleSubmit","preventDefault","trim","onSubmit","SearchForm","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","placeholder","length","loadMore","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,kD,mBCAxGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,8LCY3B,I,iDCRMC,EAAYC,SAASC,cAAc,eAEnCC,E,4MAWJC,cAAgB,SAACC,GACA,WAAXA,EAAEC,MACJ,EAAKC,MAAMC,iB,EAIfC,oBAAsB,SAACC,GACjBA,EAAMC,gBAAkBD,EAAME,QAChC,EAAKL,MAAMC,iB,uDAlBf,WACEK,QAAQC,IAAI,uBACZC,OAAOC,iBAAiB,UAAWC,KAAKb,iB,kCAG1C,WACES,QAAQC,IAAI,0BACZC,OAAOG,oBAAoB,UAAWD,KAAKb,iB,oBAe7C,WACE,OAAOe,uBACL,qBAAKC,UAAWC,IAAEC,QAASC,QAASN,KAAKR,oBAAzC,SACE,qBAAKW,UAAWC,IAAElB,MAAlB,SACE,qBAAKqB,IAAKP,KAAKV,MAAMkB,SAAUC,IAAKT,KAAKV,MAAMoB,WAGnD3B,O,GA9Bc4B,aAmCLzB,ICZA0B,MA3Bf,YAQI,IAPFC,EAOC,EAPDA,GACAC,EAMC,EANDA,WACAJ,EAKC,EALDA,KACAnB,EAIC,EAJDA,cACAwB,EAGC,EAHDA,UACAP,EAEC,EAFDA,SACAF,EACC,EADDA,QAEA,OACE,qCACE,oBAAIH,UAAWC,IAAEQ,iBAAjB,SACE,qBACEL,IAAKO,EACLL,IAAKC,EACLP,UAAWC,IAAEY,sBACbV,QAASA,KAL2BO,GASvCE,GACC,cAAC,EAAD,CAAOP,SAAUA,EAAUjB,cAAeA,EAAemB,KAAMA,Q,uBCaxDO,IC5BTC,E,4MACJC,MAAO,CACLJ,WAAW,EACXK,WAAY,GACZZ,SAAU,GACVa,OAAQ,0BACRC,OAAQ,sC,EAuBVC,YAAc,WACZ,EAAKC,UAAS,kBAAoB,CAChCT,WADY,EAAGA,e,EAKnBU,WAAa,SAACC,GACZ,EAAKF,SAAS,CAAEhB,SAAUkB,IAC1B,EAAKH,e,4CAGP,WAAU,IACJI,EADG,OAEAC,EAAU5B,KAAKV,MAAfsC,OA4BP,OAvBFD,EADEC,EAEA,oBAAIzB,UAAWC,IAAEc,aAAjB,SACEU,EAAOC,KAAI,gBAAEhB,EAAF,EAAEA,GAAIiB,EAAN,EAAMA,aAAcpB,EAApB,EAAoBA,KAAMqB,EAA1B,EAA0BA,cAA1B,OACV,cAAC,EAAD,CAEAjB,WAAYgB,EACZpB,KAAMA,EACNe,WAAY,EAAKA,WACjBlC,cAAe,kBAAM,EAAKgC,eAC1BR,UAAW,EAAKI,MAAMJ,UACtBT,QAAS,kBAAM,EAAKmB,WAAWM,IAC/BvB,SAAU,EAAKW,MAAMX,UAPhBK,QAgBS,KAGV,8BACJc,Q,GAvEoBhB,aAwGZO,I,iBCvGAc,MARf,YAA+B,IAAdC,EAAa,EAAbA,WACf,OACE,wBAAQC,KAAK,SAAS/B,UAAWC,IAAE4B,OAAQ1B,QAAS,kBAAM2B,KAA1D,wBCEEE,E,4MACJhB,MAAQ,CACNiB,MAAO,GACPC,KAAM,EACNhB,OAAQ,0BACRC,OAAQ,qCACRM,OAAQ,I,EA4BVU,kBAAoB,SAAClD,GAEnB,IAAMmD,EAAanD,EAAEO,OAAO6C,MAE5B,OACE,EAAKhB,SAAL,eAAiBpC,EAAEO,OAAO8C,KAAOF,IAAc,WAC5B,KAAfA,EACF,EAAKf,SAAS,CAAEI,OAAQ,KAExBc,IACGC,IADH,UAEO,EAAKxB,MAAME,OAFlB,eAE+B,EAAKF,MAAMiB,MAF1C,iBAEwD,EAAKjB,MAAMkB,KAFnE,gBAE+E,EAAKlB,MAAMG,OAF1F,yDAIGsB,MAAK,SAACC,GAAD,OAAS,EAAKrB,SAAS,CAAEI,OAAQiB,EAAIC,KAAKC,UAC/CC,OAAM,SAACC,GAAD,OAASrD,QAAQC,IAAIoD,U,EAOpCC,aAAe,SAAC9D,GACdA,EAAE+D,iBAC8B,KAA5B,EAAKhC,MAAMiB,MAAMgB,SAGrB,EAAK9D,MAAM+D,SAAS,EAAKlC,MAAMiB,OAE/B,EAAKZ,SAAS,CAAEY,MAAO,O,4CAGzB,WAGE,OAFAxC,QAAQC,IAAIG,KAAKmB,MAAMS,QAGrB,gCACE,wBAAQzB,UAAWC,IAAE+B,UAArB,SACE,uBAAMhC,UAAWC,IAAEkD,WAAYD,SAAUrD,KAAKkD,aAA9C,UACE,wBAAQhB,KAAK,SAAS/B,UAAWC,IAAEmD,iBAAnC,SACE,sBAAMpD,UAAWC,IAAEoD,sBAAnB,sBAGF,uBACEf,KAAK,QACLD,MAAOxC,KAAKmB,MAAMiB,MAClBqB,SAAUzD,KAAKsC,kBACfnC,UAAWC,IAAEsD,gBACbxB,KAAK,OAGLyB,YAAY,kCAKjB3D,KAAKmB,MAAMS,OAAOgC,OAAS,EAC1B,cAAC,EAAD,CAAchC,OAAQ5B,KAAKmB,MAAMS,OAAQQ,MAAOpC,KAAKmB,MAAMiB,MAAOf,OAAQrB,KAAKmB,MAAME,OAAQC,OAAQtB,KAAKmB,MAAMG,OAAQe,KAAMrC,KAAKmB,MAAMkB,OACvI,KACJ,cAAC,EAAD,CAAQJ,WAAYjC,KAAK6D,kB,GA5FTlD,aAmGTwB,IClGT2B,E,4MACJ3C,MAAQ,CACNiB,MAAO,GACPrB,WAAW,G,EAMbQ,YAAc,WACZ,EAAKC,UAAS,kBAAoB,CAChCT,WADY,EAAGA,e,EAKnBgD,iBAAmB,SAAC3B,GAClB,EAAKZ,SAAS,CAAEY,W,4CAGlB,WACwBpC,KAAKmB,MAAnBJ,UACkCf,KAAlCuB,YADR,IACqBwC,EAAqB/D,KAArB+D,iBACrB,OACE,sBAAK5D,UAAWC,IAAE0D,IAAlB,UACE,cAAC,EAAD,CAAWT,SAAUU,IACrB,cAAC,EAAD,W,GAzBUpD,aAkCHmD,ICpCfE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlF,SAASmF,eAAe,U,kBCR1BtF,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,sC","file":"static/js/main.aa90549e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2t9Jw\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2lKB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__fGEJV\",\"Modal\":\"Modal_Modal__3e2EC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__6yYTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__15I3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__k7DpO\"};","function fetchImages(query, page) {\n  const key = \"23195406-da0192683225ba1cc94043cce\";\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`There is no ${query} images`));\n  });\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import { Component } from \"react\";\nimport { isCompositeComponentWithType } from \"react-dom/test-utils\";\nimport { createPortal } from \"react-dom\";\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    console.log(\"Component did mount\");\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Component will unmount\");\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onToggleModal();\n    }\n  };\n\n  handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.onToggleModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={this.props.modalImg} alt={this.props.tags} />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import s from \"./ImageGalleryItem.module.css\";\nimport Modal from \"../Modal/Modal\";\n\nfunction ImageGalleryItem({\n  id,\n  previewImg,\n  tags,\n  onToggleModal,\n  showModal,\n  modalImg,\n  onClick\n}) {\n  return (\n    <>\n      <li className={s.ImageGalleryItem} key={id}>\n        <img\n          src={previewImg}\n          alt={tags}\n          className={s.ImageGalleryItemImage}\n          onClick={onClick}\n        />\n      </li>\n\n      {showModal && (\n        <Modal modalImg={modalImg} onToggleModal={onToggleModal} tags={tags} />\n      )}\n    </>\n  );\n}\n\nexport default ImageGalleryItem;\n","import { ImSpinner } from \"react-icons/im\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nconst styles = {\n  spinner: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    fontSize: 24,\n  },\n};\n\nfunction Loader({ query }) {\n  // const data = {\n  //     data: query,\n  //     data:{\n  //         hits: {\n\n  //           },\n\n  //         },\n  //   images: [],\n  //     };\n\n  return (\n    <div role=\"alert\">\n      <div style={styles.spinner}>\n        <ImSpinner size=\"32\" className=\"icon-spin\" />\n        Загружаем...\n      </div>\n      {/* <ImageGallery data={data} /> */}\n      <ImageGalleryItem />\n    </div>\n  );\n}\n\nexport default Loader;\n","import { Component } from \"react\";\nimport imagesAPI from \"../Api/images-api\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport s from \"./ImageGallery.module.css\";\nimport Loader from \"../Loader/Loader\";\nimport PropTypes from 'prop-types';\nimport Modal from \"../Modal/Modal\";\nimport axios from \"axios\";\n\nclass ImageGallery extends Component {\n  state ={\n    showModal: false,\n    currentImg: '',\n    modalImg: '',\n    apiUrl: \"https://pixabay.com/api\",\n    apiKey: \"23195406-da0192683225ba1cc94043cce\",\n  }\n  // state = {\n  //   data: null,\n  //   error:null,\n  //   page: 1,\n  //   status: \"idle\",\n  // };\n\n  // componentDidUpdate(prevProps, PrevState) {\n  //     const prevName = prevProps.query;\n  //     const nextName = this.props.query;\n\n  //     if (prevName !== nextName) {\n  //       this.setState({ status: \"pending\" });\n  //         imagesAPI\n  //         .fetchImages(nextName)\n  //         .then((data) => this.setState({ data, status: \"resolved\" }))\n  //         .catch((error) => this.setState({ error, status: \"rejected\" }));\n\n  //     }\n\n  //   }\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onImgClick = (img) => {\n    this.setState({ modalImg: img });\n    this.toggleModal();\n  }\n\n  render() {\n    let imageListContent;\n    const {images} = this.props;\n    \n    \n\nif (images) {\n  imageListContent = (\n    <ul className={s.ImageGallery}>\n     {images.map(({id, webformatURL, tags, largeImageURL}) => (\n       <ImageGalleryItem\n       key={id}\n       previewImg={webformatURL}\n       tags={tags}\n       onImgClick={this.onImgClick}\n       onToggleModal={() => this.toggleModal()}\n       showModal={this.state.showModal}\n       onClick={() => this.onImgClick(largeImageURL)}\n       modalImg={this.state.modalImg}\n       />\n      \n     ))}\n    </ul>\n    \n  );\n\n} else {\n  imageListContent = null;\n}\n\n    return <div>\n      {imageListContent}\n      \n      </div>;\n\n    //     const { data, error, status } = this.state;\n    // const { query } = this.props;\n\n    // if (status === \"idle\") {\n    //   return (<div>Type your query</div>);\n    // }\n\n    // if (status === \"pending\") {\n    //   return (\n    //     <Loader/>\n    //   );\n    // }\n\n    // // if (status === \"rejected\") {\n    // //   return <PokemonErrorView message={error.message} />;\n    // // }\n    // if (status === \"resolved\") {\n    //   return (<ul className={s.ImageGallery}>\n    //         <ImageGalleryItem data={data}/>\n    //       </ul>)\n\n    //     }\n  }\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array\n}\n\nexport default ImageGallery;\n","import s from \"./Button.module.css\";\n\nfunction Button({onLoadMore}) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={() => onLoadMore()}>\n      Load more\n    </button>\n  );\n}\n\nexport default Button;\n","import { Component } from \"react\";\nimport s from \"./Searchbar.module.css\";\nimport axios from \"axios\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Button from \"../Button/Button\";\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n    page: 1,\n    apiUrl: \"https://pixabay.com/api\",\n    apiKey: \"23195406-da0192683225ba1cc94043cce\",\n    images: [],\n    // /?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12'\n  };\n\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { query } = this.state;\n//         if (query !== prevState.searchQuery) {\n//             this.loadMore()\n//                 .catch(error => console.log(error))\n//                 // .finally(() => this.setState({ loadingSpinner: false }));\n//         }\n//     }\n\n  \n  \n//   loadMore = () => {\n//     const { query, page } = this.state;\n//     // this.setState({ loadingSpinner: true });\n//     return (\n//       .then(images => {\n//         this.setState(prevState => ({\n//             images: [...prevState.images, ...images],\n//             page: prevState.page + 1,\n//         }));\n//     });)\n// };\n  \n  handleQueryChange = (e) => {\n    // this.setState({query: event.currentTarget.value.toLowerCase()});\n    const inputValue = e.target.value;\n\n    return (\n      this.setState({ [e.target.name]: inputValue }, () => {\n      if (inputValue === \"\") {\n        this.setState({ images: [] });\n      } else {\n        axios\n          .get(\n            `${this.state.apiUrl}/?q=${this.state.query}&page=${this.state.page}&key=${this.state.apiKey}&image_type=photo&orientation=horizontal&per_page=12`\n          )\n          .then((res) => this.setState({ images: res.data.hits }))\n          .catch((err) => console.log(err));\n      }\n    }))\n  };\n\n  \n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.query.trim() === \"\") {\n      return;\n    }\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: \"\" });\n  };\n\n  render () {\n    console.log(this.state.images);\n\n    return (\n      <div>\n        <header className={s.Searchbar}>\n          <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className={s.SearchFormButton}>\n              <span className={s.SearchFormButtonLabel}>Search</span>\n            </button>\n\n            <input\n              name=\"query\"\n              value={this.state.query}\n              onChange={this.handleQueryChange}\n              className={s.SearchFormInput}\n              type=\"text\"\n              // autocomplete=\"off\"\n              // autofocus\n              placeholder=\"Search images and photos\"\n            />\n          </form>\n        </header>\n\n        {this.state.images.length > 0 ? (\n          <ImageGallery images={this.state.images} query={this.state.query} apiUrl={this.state.apiUrl} apiKey={this.state.apiKey} page={this.state.page}/>\n        ) : null}\n        <Button onLoadMore={this.loadMore}/>\n      </div>\n    );\n  }\n}\n\n\nexport default Searchbar;\n","import { Component } from \"react\";\nimport s from \"./App.module.css\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Modal from \"../Modal/Modal\";\nimport Button from \"../Button/Button\";\n\nclass App extends Component {\n  state = {\n    query: \"\",\n    showModal: false,\n    // page: 1,\n    // results: [],\n    // loading: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleFormSubmit = (query) => {\n    this.setState({ query });\n  };\n\n  render() {\n    const { showModal } = this.state;\n    const { toggleModal, handleFormSubmit } = this;\n    return (\n      <div className={s.App}>\n        <Searchbar onSubmit={handleFormSubmit} />\n        <Button/>\n        {/* <ImageGallery query={this.state.query} onToggleModal={toggleModal} images={this.props.images}/> */}\n        {/* <Button onClick={toggleModal} />\n        {showModal && <Modal onToggleModal={toggleModal} />} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2x76L\",\"SearchForm\":\"Searchbar_SearchForm__1YE1p\",\"SearchFormButton\":\"Searchbar_SearchFormButton__SdRx2\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__hBfui\",\"SearchFormInput\":\"Searchbar_SearchFormInput__vT5bo\"};"],"sourceRoot":""}